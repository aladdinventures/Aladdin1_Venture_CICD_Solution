# YouTube Automation System v3.0 - Docker Compose
# Copyright (c) 2025 Saeed Alaediny. All rights reserved.

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: youtube_automation_db
    environment:
      POSTGRES_USER: ${DB_USER:-youtube_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-youtube_password}
      POSTGRES_DB: ${DB_NAME:-youtube_automation}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-youtube_user}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - youtube_network

  # Redis (Cache & Message Broker)
  redis:
    image: redis:7-alpine
    container_name: youtube_automation_redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "${REDIS_PORT:-6379}:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - youtube_network

  # FastAPI Web Application
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: youtube_automation_web
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - .:/app
      - storage_data:/app/storage
      - logs_data:/app/logs
    ports:
      - "${WEB_PORT:-8000}:8000"
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://${DB_USER:-youtube_user}:${DB_PASSWORD:-youtube_password}@db:5432/${DB_NAME:-youtube_automation}
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - youtube_network
    restart: unless-stopped

  # Celery Worker
  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: youtube_automation_celery_worker
    command: celery -A tasks.celery_app worker --loglevel=info
    volumes:
      - .:/app
      - storage_data:/app/storage
      - logs_data:/app/logs
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://${DB_USER:-youtube_user}:${DB_PASSWORD:-youtube_password}@db:5432/${DB_NAME:-youtube_automation}
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - youtube_network
    restart: unless-stopped

  # Celery Beat (Scheduler)
  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: youtube_automation_celery_beat
    command: celery -A tasks.celery_app beat --loglevel=info
    volumes:
      - .:/app
      - logs_data:/app/logs
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://${DB_USER:-youtube_user}:${DB_PASSWORD:-youtube_password}@db:5432/${DB_NAME:-youtube_automation}
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - youtube_network
    restart: unless-stopped

networks:
  youtube_network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  storage_data:
  logs_data:

